########################################################################################################
### This Program can calculate p-values of example of 3 way with test statistics T_IIG and T_TCIG in ###
### Fan RZ, Zhong M, Wang SF, Zhang YW, Andrew A, Karagas M, Chen H, Amos CI, Xiong M, and Moore J ###
### (2011) Entropy-based information gain approaches to detect and to characterize gene-gene and ###
### gene-environment interactions/correlations of complex diseases. Genetic Epidemiology 35:706-721. ###
### Maintainer: Bingsong Zhang ###
########################################################################################################
p_value_func_T_TIIG <- function(X1, Y1)
     {
     M <- sum(X1)
     P1 <- X1/M
     P <- P1[c(-27)]
     N <- sum(Y1)
     Q1 <- Y1/N
     Q <- Q1[c(-27)]
               Sigma <- diag(P) - P %*% t(P)
               PGABE1 <- array(P1, dim=c(3,3,3))
               h <- array (0, dim=c(3,3,3) )
               dh <- matrix (0, nrow = 1, ncol = 26)
               tmp<- 0
               if (PGABE1[3,3,3] > 0)
               tmp <- tmp - log2( PGABE1[3,3,3]*sum(PGABE1[3,,])*sum(PGABE1[,3,])*sum(PGABE1[,,3])/( sum(PGABE1[3,3,]) * sum(PGABE1[3,,3]) * sum(PGABE1[,3,3]) ) )
               for (i in 1:3)
                    for (j in 1:3)
                         for (e in 1:3)
                              if (PGABE1[i,j,e] > 0)
                                   {
                                        h[i,j,e] <- PGABE1[i,j,e] * log2( PGABE1[i,j,e]*sum(PGABE1[i,,])*sum(PGABE1[,j,])*sum(PGABE1[,,e])/( sum(PGABE1[i,j,]) * sum(PGABE1[i,,e]) * sum(PGABE1[,j,e]) ) )
                                             if ( i+j+e < 9 )
                                                  {
                                                  tmp1 <- log2( PGABE1[i,j,e]*sum(PGABE1[i,,])*sum(PGABE1[,j,])*sum(PGABE1[,,e])/( sum(PGABE1[i,j,]) * sum(PGABE1[i,,e]) * sum(PGABE1[,j,e]) ) )
                                                  dh[9*(e-1)+3*(j-1)+i] <- tmp + tmp1
                                                  }
                                        }
               SigmaD <- diag(Q) - Q %*% t(Q)
               QGABE1 <- array(Q1, dim=c(3,3,3))
               l <- array (0, dim=c(3,3,3) )
               dl <- matrix (0, nrow = 1, ncol = 26)
               tmp2<- 0
               if ( QGABE1[3,3,3] > 0)
               tmp2 <- tmp2 - log2( QGABE1[3,3,3]*sum(QGABE1[3,,])*sum(QGABE1[,3,])*sum(QGABE1[,,3])/( sum(QGABE1[3,3,]) * sum(QGABE1[3,,3]) * sum(QGABE1[,3,3]) ) )
               for (i in 1:3)
                    for (j in 1:3)
                         for (e in 1:3)
                              if (QGABE1[i,j,e] > 0)
                                   {
                                        l[i,j,e] <- QGABE1[i,j,e] * log2( QGABE1[i,j,e]*sum(QGABE1[i,,])*sum(QGABE1[,j,])*sum(QGABE1[,,e])/( sum(QGABE1[i,j,]) * sum(QGABE1[i,,e]) * sum(QGABE1[,j,e]) ) )
                                             if ( i+j+e < 9 )
                                                  {
                                                  tmp3 <- log2( QGABE1[i,j,e]*sum(QGABE1[i,,])*sum(QGABE1[,j,])*sum(QGABE1[,,e])/( sum(QGABE1[i,j,]) * sum(QGABE1[i,,e]) * sum(QGABE1[,j,e]) ) )
                                                  dl[9*(e-1)+3*(j-1)+i] <- tmp2 + tmp3
                                                  }
                                   }
               Lambda <- dh %*% Sigma %*% t(dh)/M + dl %*% SigmaD %*% t(dl)/N
               T_IIG <-(sum(h)-sum(l))^2/Lambda
               p_value<- 1-pchisq(T_IIG,1)
               T_IIG_pvalue<-c(T_IIG,p_value)
     }
### This Program can calculate p_value of example of 3 way with test statistic T_TCIG ###
p_value_func_T_TCIG <- function(X1, Y1)
     {
     M <- sum(X1)
     P1 <- X1/M
     
     N <- sum(Y1)
     Q1 <- Y1/N
     Q <- Q1[c(-27)]
               Sigma <- diag(P) - P %*% t(P)
               PGABE1 <- array(P1, dim=c(3,3,3))
               f <- array (0, dim=c(3,3,3) )
               df <- matrix (0, nrow = 1, ncol = 26)
               tmp<- 0
               if (PGABE1[3,3,3] > 0)
               tmp <- tmp - log2( PGABE1[3,3,3] / ( sum(PGABE1[3,,])*sum(PGABE1[,3,])*sum(PGABE1[,,3]) ) )
               for (i in 1:3)
                    for (j in 1:3)
                         for (e in 1:3)
                              if (PGABE1[i,j,e] > 0)
                                   {
                                        f[i,j,e] <- PGABE1[i,j,e] * log2( PGABE1[i,j,e] / ( sum(PGABE1[i,,])*sum(PGABE1[,j,])*sum(PGABE1[,,e]) ) )
                                             if ( i+j+e < 9 )
                                                  {
                                                  tmp1 <- log2( PGABE1[i,j,e] / ( sum(PGABE1[i,,])*sum(PGABE1[,j,])*sum(PGABE1[,,e]) ) )
                                                  df[9*(e-1)+3*(j-1)+i] <- tmp + tmp1
                                                  }
                                        }
               SigmaD <- diag(Q) - Q %*% t(Q)
               QGABE1 <- array(Q1, dim=c(3,3,3))
               g <- array (0, dim=c(3,3,3) )
               dg <- matrix (0, nrow = 1, ncol = 26)
               tmp2<- 0
               if ( QGABE1[3,3,3] > 0)
               tmp2 <- tmp2 - log2( QGABE1[3,3,3] / ( sum(QGABE1[3,,])*sum(QGABE1[,3,])*sum(QGABE1[,,3]) ) )
               for (i in 1:3)
                    for (j in 1:3)
                         for (e in 1:3)
                              if (QGABE1[i,j,e] > 0)
                                   {
                                        g[i,j,e] <- QGABE1[i,j,e] * log2( QGABE1[i,j,e] / ( sum(QGABE1[i,,])*sum(QGABE1[,j,])*sum(QGABE1[,,e]) ) )
                                             if ( i+j+e < 9 )
                                                  {
                                                  tmp3 <- log2( QGABE1[i,j,e] / ( sum(QGABE1[i,,])*sum(QGABE1[,j,])*sum(QGABE1[,,e]) ) )
                                                  dg[9*(e-1)+3*(j-1)+i] <- tmp2 + tmp3
                                                  }
                                        }
               Lambda <- df %*% Sigma %*% t(df)/M + dg %*% SigmaD %*% t(dg)/N
               T_TCIG <-(sum(f)-sum(g))^2/Lambda
               p_value<- 1-pchisq(T_TCIG,1)
               T_TCIG_pvalue<-c(T_TCIG,p_value)
     }
#(15) ape1 xpd.751 xpd.312
X1<- c(46,10,7,20,49,3,2,8,7,77,22,7,34,101,12,1,15,16,33,10,1,6,43,4,2,10,13)
Y1<- c(15,21,3,14,25,10,6,4,3,28,32,11,30,40,13,14,10,9,15,10,6,8,17,1,5,3,2)
T_IIG_pvalue = p_value_func_T_TIIG(X1, Y1)
T_IIG_pvalue
T_TCIG_pvalue = p_value_func_T_TCIG(X1, Y1)
T_TCIG_pvalue
